sdk_min="1.39.1"
sdk_ignored= [
    "1.38.7",   # malformed due an incompatibility with EMSDK release
    "1.38.17",  # ignored due an SDK error
    "1.38.33",  # broken dependency between emscripten<>emscripten-releases
]

[registries]
    [registries.docker]
    registry="docker.io"

    [registries.github]
    registry="docker.pkg.github.com"
    namespace="lollersk8r"

# ------------------------------------------------------------------------------

[[images]]
    enabled=false
    name="lollersk8r/emscripten-slim"
    source="docker/lollersk8r/emscripten-slim"
    version_matcher='^(\d+\.\d+\.\d+)$' # defines a strict pattern to look for the latest tag
    build_tag="{namespace}/{project}:sdk-tag-{version}-64bit" # other images rely on that name
    short="Size optimized image with Emscripten that allows to compile ASM.js and WebAsembly code."
    long_from_file="docs/emscripten-slim.md"
    dependency=[]
    tags= [
        "{registry}/{namespace}/emscripten:{version}-slim",
        "{registry}/{namespace}/{project}:sdk-tag-{version}-64bit",
        "{registry}/{namespace}/{project}:{version}",
    ]
    tests= [
        "emcc test.cpp -o test.js -s WASM=0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=1 && node test.js",
        "node --version",
        "python --version",
        "embuilder.py build zlib",
        "/emsdk_portable/emsdk list",
    ]
    [images.args]
    EMSCRIPTEN_VERSION= "{version}"
    EMSDK_CHANGESET= "{emsdk_cs}"

# ------------------------------------------------------------------------------

[[images]]
    enabled=false
    name="lollersk8r/emscripten"
    source="docker/lollersk8r/emscripten"
    version_matcher='^(\d+\.\d+\.\d+)-upstream$' # defines a strict pattern to look for the latest tag
    build_tag="{namespace}/{project}:sdk-tag-{version}-64bit"
    short="A complete container that allows to compile Emscripten and WebAssembly projects"
    long_from_file="docs/emscripten.md"
    dependency=["lollersk8r/emscripten-slim"]
    tags= [
        "{registry}/{namespace}/{project}:sdk-tag-{version}-64bit",
        "{registry}/{namespace}/{project}:{version}",
    ]
    tests= [
        "emcc test.cpp -o test.js -s WASM=0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=0 --closure 0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=1 && node test.js",
        "embuilder.py build zlib",
        "node --version",
        "python --version",
        "wget --version",
        "curl --version",
        "zip --version",
        "unzip -version",
        "make --version",
        "cmake --version",
        "git --version",
        "which ssh",
        "perl --version",
        "java -version",
        "/emsdk_portable/emsdk list",
    ]
    [images.args]
    EMSCRIPTEN_VERSION= "{version}"
    EMSDK_CHANGESET= "{emsdk_cs}"

# ------------------------------------------------------------------------------

[[images]]
    enabled=false
    name="lollersk8r/emscripten-ubuntu"
    source="docker/lollersk8r/emscripten-ubuntu"
    version_matcher='^(\d+\.\d+\.\d+)$' # defines a strict pattern to look for the latest tag
    build_tag="{namespace}/{project}:{version}"
    short="A complete container that allows to compile Emscripten and WebAssembly project. Ubuntu based"
    long_from_file="docs/emscripten-ubuntu.md"
    dependency=["lollersk8r/emscripten"]
    tags= [
        "{registry}/{namespace}/emscripten:{version}-ubuntu",
        "{registry}/{namespace}/{project}:sdk-tag-{version}-64bit",
        "{registry}/{namespace}/{project}:{version}",
    ]
    tests= [
        "emcc test.cpp -o test.js -s WASM=0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=0 --closure 0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=1 && node test.js",
        "embuilder.py build zlib",
        "node --version",
        "python --version",
        "wget --version",
        "curl --version",
        "zip --version",
        "unzip -version",
        "make --version",
        "cmake --version",
        "git --version",
        "which ssh",
        "perl --version",
        "/emsdk_portable/emsdk list",
    ]
    [images.args]
    EMSCRIPTEN_VERSION= "{version}"
    EMSDK_CHANGESET= "{emsdk_cs}"

# ------------------------------------------------------------------------------

[[images]]
    enabled=true
    name="lollersk8r/emscripten-upstream"
    source="docker/lollersk8r/emscripten-upstream"
    version_matcher='^(\d+\.\d+\.\d+)$' # defines a strict pattern to look for the latest tag
    build_tag="{namespace}/{project}:{version}"
    short="A complete container that allows to compile Emscripten and WebAssembly project"
    long_from_file="docs/emscripten-upstream.md"
    dependency=[]
    tags= [
        "{registry}/{namespace}/emscripten:{version}-upstream",
        "{registry}/{namespace}/{project}:sdk-tag-{version}-64bit",
        "{registry}/{namespace}/{project}:{version}",
    ]
    tests= [
        "emcc test.cpp -o test.js -s WASM=0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=0 --closure 0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=1 && node test.js",
        "embuilder.py build zlib",
        "node --version",
        "python --version",
        "wget --version",
        "curl --version",
        "zip --version",
        "unzip -version",
        "make --version",
        "cmake --version",
        "git --version",
        "which ssh",
        "perl --version",
        "java -version",
        "/emsdk_portable/emsdk list",
    ]
    [images.args]
    EMSCRIPTEN_VERSION= "{version}"
    EMSDK_CHANGESET= "{emsdk_cs}"

# ------------------------------------------------------------------------------

[[images]]
    enabled=true
    name="lollersk8r/emscripten-fastcomp"
    source="docker/lollersk8r/emscripten-fastcomp"
    version_matcher='^(\d+\.\d+\.\d+)$' # defines a strict pattern to look for the latest tag
    build_tag="{namespace}/{project}:{version}"
    short="A complete container that allows to compile Emscripten and WebAssembly project"
    long_from_file="docs/emscripten-fastcomp.md"
    dependency=[]
    tags= [
        "{registry}/{namespace}/emscripten:{version}-fastcomp",
        "{registry}/{namespace}/{project}:sdk-tag-{version}-64bit",
        "{registry}/{namespace}/{project}:{version}",
    ]
    tests= [
        "emcc test.cpp -o test.js -s WASM=0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=0 --closure 0 && node test.js",
        "emcc test.cpp -o test.js -s WASM=1 && node test.js",
        "embuilder.py build zlib",
        "node --version",
        "python --version",
        "wget --version",
        "curl --version",
        "zip --version",
        "unzip -version",
        "make --version",
        "cmake --version",
        "git --version",
        "which ssh",
        "perl --version",
        "java -version",
        "/emsdk_portable/emsdk list",
    ]
    [images.args]
    EMSCRIPTEN_VERSION= "{version}"
    EMSDK_CHANGESET= "{emsdk_cs}"
